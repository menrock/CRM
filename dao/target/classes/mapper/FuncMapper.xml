<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.niu.crm.dao.mapper.FuncMapper" >
  <resultMap id="BaseResultMap" type="com.niu.crm.model.Func" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="show_index" property="showIndex" jdbcType="BIGINT" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="func_desc" property="funcDesc" jdbcType="VARCHAR" />
    <result column="acl_scopes" property="aclScopes" jdbcType="VARCHAR" />
    <result column="creator_id" property="creatorId" jdbcType="BIGINT" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
  </resultMap>
  
  <sql id="Base_Columns" >
    id, code, name, func_desc, show_index, acl_scopes, creator_id, created_at, updated_at
  </sql>
  
  <insert id="insert" parameterType="com.niu.crm.model.Func" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_func (code, name, func_desc, show_index, acl_scopes, creator_id, created_at, updated_at)
       values (lower(#{code}),  #{name}, #{funcDesc}, #{showIndex}, lower(#{aclScopes}), #{creatorId}, now(), now()
    )
  </insert>
  <update id="update" parameterType="com.niu.crm.model.Func" >
    update t_func
       set show_index = #{showIndex},
           code = lower(#{code}),
           name = #{name},
           func_desc = #{funcDesc},
           acl_scopes = lower(#{aclScopes}),
           updated_at = now()
     where id = #{id}
  </update>
  
  <delete id="delete" >
    delete from t_func where id = #{id}
  </delete>
  
  <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Columns" />
    from t_func
    where id = #{id}
  </select>
  
  <select id="selectByCode" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Columns" />
    from t_func
    where code = lower(#{code})
  </select>

  <select id="selectFunc" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Columns" />
    from t_func
      order by show_index, code
	<if test="pager !=null">
	 limit #{pager.offset}, #{pager.size}
	</if>		
  </select>
</mapper>  