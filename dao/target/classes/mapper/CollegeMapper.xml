<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.niu.crm.dao.mapper.CollegeMapper" >
  <resultMap id="BaseResultMap" type="com.niu.crm.model.College" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="show_index" property="showIndex" jdbcType="BIGINT" />
    <result column="cn_name" property="cnName" jdbcType="VARCHAR" />
    <result column="en_name" property="enName" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="VARCHAR" />
    <result column="col_type" property="colType" jdbcType="VARCHAR" />
    <result column="country_code" property="countryCode" jdbcType="VARCHAR" />
    <result column="creator_id" property="creatorId" jdbcType="BIGINT" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
  </resultMap>
  
  <sql id="Base_Columns" >
    id, show_index, cn_name, en_name, level, col_type, country_code, creator_id, created_at, updated_at
  </sql>
  
  <insert id="insert" parameterType="com.niu.crm.model.College" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_college (
        show_index, cn_name, en_name, level, col_type, country_code, creator_id, created_at, updated_at
    )
       values 
    (
       #{showIndex}, #{cnName}, #{enName}, #{level}, #{colType}, #{countryCode}, #{creatorId}, now(), now()
    )
  </insert>
  <update id="update" parameterType="com.niu.crm.model.College" >
    update t_college
       set show_index = #{showIndex},
           cn_name = #{cnName},
           en_name = #{enName},
           level   = #{level},
           col_type = #{colType},
           country_code = #{countryCode},
           updated_at = now()
     where id = #{id}
  </update>
  
  <delete id="delete" parameterType="java.lang.Long" >
    delete from t_college where id = #{id}
  </delete>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Columns" />
    from t_college
    where id = #{id}
  </select>
  
  <sql id="queryClause">
  	 from t_college d
    where 1=1
    
    <if test="params.colType != null and params.colType != '' " >
      and col_type = #{params.colType}
    </if>
    <if test="params.countryCode != null and params.countryCode != '' " >
      and country_code = #{params.countryCode}
    </if>
    <if test="params.enName != null and params.enName != '' " >
      and en_name like #{params.enName}
    </if>
    <if test="params.cnName != null and params.cnName != '' " >
      and cn_name like #{params.cnName}
    </if>
  </sql>  
  
  <select id="countCollege" resultType="Integer">
    select count(*) 
    <include refid="queryClause"/>
  </select>
  
  <select id="queryCollege" resultMap="BaseResultMap" >
    select
    <include refid="Base_Columns" />
    <include refid="queryClause"/>
    <if test="pager !=null and pager.sort != null">
		order by 
		<foreach collection="pager.sort" item="order" index="index" open="" separator="" close="">
		     ${order.property} ${order.direction}
		</foreach>
	</if>
	<if test="pager ==null or pager.sort ==null">
		order by d.show_index, d.en_name
	</if>	
	<if test="pager !=null ">
		limit #{pager.offset}, #{pager.size}
	</if>
  </select>
</mapper>  