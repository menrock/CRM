<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.niu.crm.dao.mapper.CustomerMapper" >
  <resultMap id="BaseResultMap" type="com.niu.crm.model.Customer" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="wechat" property="wechat" jdbcType="VARCHAR" />
    <result column="lx_cust" property="lxCust" jdbcType="BIT" />
    <result column="px_cust" property="pxCust" jdbcType="BIT" />
    <result column="cp_cust" property="cpCust" jdbcType="BIT" />
    <result column="qq" property="QQ" jdbcType="VARCHAR" />
    <result column="idcert_type" property="idCertType" jdbcType="VARCHAR" />
    <result column="idcert_no" property="idCertNo" jdbcType="VARCHAR" />
    <result column="marriage" property="marriage" jdbcType="VARCHAR" />
    <result column="creator_id" property="creatorId" jdbcType="BIGINT" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
    <result column="archive" property="archive" jdbcType="BIT" />
  </resultMap>
  
  <sql id="Base_Columns" >
    c.id, c.name, c.gender, c.mobile, c.phone, c.email, c.wechat, 
    c.lx_cust, c.px_cust, c.cp_cust, c.qq, c.idcert_type, c.idcert_no, 
    c.marriage, c.creator_id, c.created_at, c.updated_at, c.archive
  </sql>
  
  <insert id="insert" parameterType="com.niu.crm.model.Customer" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_customer (
              name, gender, mobile, phone, email, wechat, 
              lx_cust, px_cust, cp_cust, qq, idcert_type, idcert_no, 
              marriage,creator_id, created_at, updated_at)
    values (
         #{name}, #{gender}, #{mobile}, #{phone}, #{email}, #{wechat}, 
         #{lxCust}, #{pxCust}, #{cpCust}, #{QQ}, #{idCertType}, #{idCertNo},  
         #{marriage}, #{creatorId}, #{createdAt}, #{updatedAt} )
  </insert>
  <update id="update" parameterType="com.niu.crm.model.Customer" >
    update t_customer
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="wechat != null" >
        wechat = #{wechat,jdbcType=VARCHAR},
      </if>
      <if test="lxCust != null" >
        lx_cust = #{lxCust},
      </if>
      <if test="pxCust != null" >
        px_cust = #{pxCust},
      </if>
      <if test="cpCust != null" >
        cp_cust = #{cpCust},
      </if>
      <if test="QQ != null" >
        qq = #{QQ,jdbcType=VARCHAR},
      </if>
      <if test="idCertType != null" >
        idcert_type = #{idCertType,jdbcType=VARCHAR},
      </if>
      <if test="idCertNo != null" >
        idcert_no = #{idCertNo,jdbcType=VARCHAR},
      </if>
      <if test="marriage != null" >
        marriage = #{marriage,jdbcType=VARCHAR},
      </if>
      updated_at = now()
    </set>
    where id = #{id}
  </update>
  
  <update id="delete" parameterType="java.lang.Long" >
    update t_customer set archive=1 where id = #{id}
  </update>
  
  <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Columns" />
    from t_customer c
    where id = #{id}
  </select>
  
  <select id="selectByStuId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Columns" />
    from t_customer c, t_lx_customer s 
    where c.id = s.cstm_id and s.id = #{stuId}
  </select>
</mapper>  